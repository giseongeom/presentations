

# 생성
# IAM User
aws iam create-user --user-name lab
aws iam create-login-profile --user-name lab --password '1SuperF@stx'
aws iam create-access-key --user-name lab

# IAM Group
aws iam create-group --group-name HOLGroupUsers
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AdministratorAccess --group-name HOLGroupUsers
aws iam add-user-to-group --group-name HOLGroupUsers --user-name lab
aws iam list-attached-group-policies --group-name HOLGroupUsers
#
aws configure --profile lab

export AWS_PROFILE=lab
aws iam get-user








# VPC
aws ec2 create-vpc --cidr-block 10.0.0.0/16
vpcid=$(aws ec2 describe-vpcs --query "Vpcs[?CidrBlock == '10.0.0.0/16'].VpcId" --output text)
aws ec2 create-subnet --vpc-id $vpcid --cidr-block 10.0.0.0/24
aws ec2 create-subnet --vpc-id $vpcid --cidr-block 10.0.1.0/24

aws ec2 create-internet-gateway
aws ec2 describe-internet-gateways --query "InternetGateways[?Attachments[0].State == null]" | jq .[0].InternetGatewayId
igwid=$(aws ec2 describe-internet-gateways --query "InternetGateways[?Attachments[0].State == null]" | jq -r .[0].InternetGatewayId)
aws ec2 attach-internet-gateway --vpc-id $vpcid --internet-gateway-id $igwid
igwid=$(aws ec2 describe-internet-gateways --query "InternetGateways[?Attachments[0].VpcId=='$vpcid']" | jq -r .[0].InternetGatewayId)

aws ec2 create-route-table --vpc-id $vpcid
user_rtableid=$(aws ec2 describe-route-tables --query "RouteTables[?VpcId=='$vpcid'] | [?Associations[0].Main == null]" | jq -r .[].RouteTableId)
aws ec2 create-route --route-table-id $user_rtableid --destination-cidr-block 0.0.0.0/0 --gateway-id $igwid

subnetid=$(aws ec2 describe-subnets --query "Subnets[?VpcId=='$vpcid'] | [?starts_with(CidrBlock, '10.0.1')]" | jq -r .[0].SubnetId)
aws ec2 associate-route-table --subnet-id $subnetid --route-table-id $user_rtableid
aws ec2 modify-subnet-attribute --subnet-id $subnetid --map-public-ip-on-launch

user_rtable_aid=$(aws ec2 describe-route-tables --query "RouteTables[?VpcId=='$vpcid'] | [?Associations[0].SubnetId == '$subnetid']" | jq -r .[0].Associations[0].RouteTableAssociationId)


# EC2
aws ec2 import-key-pair --key-name vagrant --region ap-northeast-2 --public-key-material file://vagrant.pub
ami_id=$(aws ec2 describe-images --owner amazon --query "Images[?starts_with(Name, 'amzn2-ami-hvm-2.0')] | sort_by([], &CreationDate) | reverse([])" | jq -r .[0].ImageId)

aws ec2 create-security-group --group-name allow-lab-access --description lab --vpc-id $vpcid
sg_id=$(aws ec2 describe-security-groups --query "SecurityGroups[?VpcId=='$vpcid'] | [?contains(Description, 'lab')]" | jq -r .[0].GroupId)
aws ec2 authorize-security-group-ingress --group-id $sg_id --protocol tcp --port 22 --cidr 0.0.0.0/0

aws ec2 run-instances --image-id $ami_id --count 2 --instance-type t2.micro --key-name vagrant --security-group-ids $sg_id --subnet-id $subnetid
aws ec2 describe-instances --query "Reservations[].Instances[].[PublicIpAddress,State.Name]" --output table
















# 삭제
# EC2
ids=$(aws ec2 describe-instances --query "Reservations[].Instances[?VpcId=='$vpcid'].InstanceId" --output text)
aws ec2 terminate-instances --instance-ids $ids

sg_id=$(aws ec2 describe-security-groups --query "SecurityGroups[?VpcId=='$vpcid'] | [?contains(Description, 'lab')]" | jq -r .[0].GroupId)
aws ec2 delete-security-group --group-id $sg_id

aws ec2 describe-key-pairs
aws ec2 delete-key-pair --key-name vagrant


# VPC
user_rtableid=$(aws ec2 describe-route-tables --query "RouteTables[?VpcId=='$vpcid'] | [?Associations[0].SubnetId == '$subnetid']" | jq -r .[].RouteTableId)
user_rtable_aid=$(aws ec2 describe-route-tables --query "RouteTables[?VpcId=='$vpcid'] | [?Associations[0].SubnetId == '$subnetid']" | jq -r .[0].Associations[0].RouteTableAssociationId)

aws ec2 disassociate-route-table --association-id $user_rtable_aid
aws ec2 delete-route --route-table-id $user_rtableid --destination-cidr-block 0.0.0.0/0
aws ec2 delete-route-table --route-table-id $user_rtableid 

#
igwid=$(aws ec2 describe-internet-gateways --query "InternetGateways[?Attachments[0].VpcId=='$vpcid']" | jq -r .[0].InternetGatewayId)
aws ec2 detach-internet-gateway --vpc-id $vpcid --internet-gateway-id $igwid
aws ec2 delete-internet-gateway --internet-gateway-id $igwid

subnet_ids=$(aws ec2 describe-subnets --query "Subnets[?VpcId=='$vpcid'].SubnetId" --output text)
for mynet in $subnet_ids; do aws ec2 delete-subnet --subnet-id $mynet; done

aws ec2 delete-vpc --vpc-id $vpcid




# IAM User
export AWS_PROFILE=default

aws iam delete-login-profile --user-name lab
aws iam remove-user-from-group --group-name HOLGroupUsers --user-name lab
user_access_key=$(aws iam list-access-keys --user-name lab --query AccessKeyMetadata[0].AccessKeyId --output text)
aws iam delete-access-key --access-key-id $user_access_key --user-name lab
aws iam delete-user --user-name lab


# IAM Group
aws iam detach-group-policy --policy-arn arn:aws:iam::aws:policy/AdministratorAccess --group-name HOLGroupUsers
aws iam delete-group --group-name HOLGroupUsers
